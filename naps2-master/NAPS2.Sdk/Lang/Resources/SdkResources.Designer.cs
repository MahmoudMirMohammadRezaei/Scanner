//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NAPS2.Lang.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SdkResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SdkResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NAPS2.Lang.Resources.SdkResources", typeof(SdkResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected scanner is busy..
        /// </summary>
        internal static string DeviceBusy {
            get {
                return ResourceManager.GetString("DeviceBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scanner&apos;s cover is open..
        /// </summary>
        internal static string DeviceCoverOpen {
            get {
                return ResourceManager.GetString("DeviceCoverOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected scanner could not be found..
        /// </summary>
        internal static string DeviceNotFound {
            get {
                return ResourceManager.GetString("DeviceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected scanner is offline..
        /// </summary>
        internal static string DeviceOffline {
            get {
                return ResourceManager.GetString("DeviceOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scanner has a paper jam..
        /// </summary>
        internal static string DevicePaperJam {
            get {
                return ResourceManager.GetString("DevicePaperJam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scanner is warming up..
        /// </summary>
        internal static string DeviceWarmingUp {
            get {
                return ResourceManager.GetString("DeviceWarmingUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected driver is not supported on this system..
        /// </summary>
        internal static string DriverNotSupported {
            get {
                return ResourceManager.GetString("DriverNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; could not be imported..
        /// </summary>
        internal static string ImportErrorCouldNot {
            get {
                return ResourceManager.GetString("ImportErrorCouldNot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NAPS2.
        /// </summary>
        internal static string NAPS2 {
            get {
                return ResourceManager.GetString("NAPS2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No device selected..
        /// </summary>
        internal static string NoDeviceSelected {
            get {
                return ResourceManager.GetString("NoDeviceSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No scanning device was found..
        /// </summary>
        internal static string NoDevicesFound {
            get {
                return ResourceManager.GetString("NoDevicesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected scanner does not support using duplex. If your scanner is supposed to support duplex, try using a different driver..
        /// </summary>
        internal static string NoDuplexSupport {
            get {
                return ResourceManager.GetString("NoDuplexSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected scanner does not support using a feeder. If your scanner does have a feeder, try using a different driver..
        /// </summary>
        internal static string NoFeederSupport {
            get {
                return ResourceManager.GetString("NoFeederSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No pages are in the feeder..
        /// </summary>
        internal static string NoPagesInFeeder {
            get {
                return ResourceManager.GetString("NoPagesInFeeder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred running OCR..
        /// </summary>
        internal static string OcrError {
            get {
                return ResourceManager.GetString("OcrError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The OCR operation timed out..
        /// </summary>
        internal static string OcrTimeout {
            get {
                return ResourceManager.GetString("OcrTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You do not have permission to copy content from the file &apos;{0}&apos;..
        /// </summary>
        internal static string PdfNoPermissionToExtractContent {
            get {
                return ResourceManager.GetString("PdfNoPermissionToExtractContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SANE driver is not available. Make sure to install the required packages:.
        /// </summary>
        internal static string SaneNotAvailable {
            get {
                return ResourceManager.GetString("SaneNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The OCR engine is not available. Make sure to install the required package:.
        /// </summary>
        internal static string TesseractNotAvailable {
            get {
                return ResourceManager.GetString("TesseractNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred with the scanning driver..
        /// </summary>
        internal static string UnknownDriverError {
            get {
                return ResourceManager.GetString("UnknownDriverError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0}.
        /// </summary>
        internal static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
    }
}
